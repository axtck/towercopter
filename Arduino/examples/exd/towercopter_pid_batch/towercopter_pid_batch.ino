
#include <Servo.h>
#include <PID_v1.h>

Servo ESC;                                           // create servo object to control the ESC

// ESC
float potValue;                                      // value from the analog pin
float potValue1;
float u;

// SENSOR
const int Trigger = 6;                               // Digital pin 6 for Trigger
const int Echo = 5;                                  // Digital pin 5 for Echo
const int sw_am_pin = 13;                            // Digital pin 7 for sw_am
float potValuef=0;
float alpha;
float df;

// PID
double Setpoint ;                                   
double Input;                                       
double Inputf;                                       
double Output ;                                     
double Kp=0.1, Ki=0.1, Kd=0.01;                      // PID tuning parameters
PID myPID(&Input, &Output, &Setpoint, Kp, Ki, Kd, DIRECT); // myPID Object
bool sw_am;                                           // Sw auto/manual
int umax = 90;                                        // ESC max value
int umin = 0;                                         // ESC min value

// Batch
int batch[300] = {}; 
float sinebatch[300] = {50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,54.9916708323414,59.9334665397531,64.7760103330670,69.4709171154325,73.9712769302102,78.2321236697518,82.2108843618846,85.8678045449761,89.1663454813742,92.0735492403948,94.5603680030718,96.6019542983613,98.1779092708597,99.2724864994230,99.8747493302027,99.9786801520753,99.5832405226234,98.6923815439098,97.3150043843707,95.4648713412841,93.1604683324437,90.4248201909795,87.2852606088360,83.7731590275575,79.9236072051978,75.7750685910732,71.3689940116915,66.7494075077952,61.9624664606991,57.0560004029934,52.0790331216645,47.0812928286210,42.1127152928376,37.2229448986584,32.4608386155190,27.8739778352574,23.5081929545753,19.4071054528640,15.6116920408013,12.1598752346036,9.08614444677946,6.42121137932059,4.19170316252725,2.41989630552419,1.12349411674515,0.315449818326776,0.00383712179495888,0.191769558207973,0.877369368783377,2.05378626684308,3.70926588361339,5.82726721399234,8.38662788880496,11.3617756222006,14.7229837214804,18.4366681063840,22.4657228701181,26.7698910293122,31.3061667584882,36.0292250900537,40.8918747863953,45.8455298591252,50.8406950242175,55.8274602425247,60.7559994043908,65.5770681756689,70.2424960308299,74.7056675569305,78.9219882194100,82.8493299359395,86.4484520062938,89.6833931924577,92.5218310314282,94.9354047905813,96.8999988387370,98.3959836015743,99.4084116938500,99.9271672687302,99.9470670919886,99.4679123311691,98.4944905422543,97.0365278339886,95.1085916878147,92.7299454044140,89.9243556311745,86.7198548937057,83.1484615041091,79.2458596445881,75.0510428228942,70.6059242620878,65.9549181174676,61.1444957050123,56.2227211753531,51.2387712726679,46.2424439769095,41.2836609388509,36.4119686794528,31.6760435374036,27.1232053112339,22.7989444555315,18.7464675553558,15.0062656203228,11.6157095118209,8.60867654571732,6.01521200141650,3.86122891935963,2.16824918649058,0.953188496675423,0.228187334681131,0.000489672464823343,0.272370589800545,1.04111354243415,2.29903750489555,4.03357371676621,6.22739126557858,8.85857025156462,11.9008208040484,15.3237457611438,19.0931443881483,23.1713540999783,27.5176267732699,32.0885358881586,36.8384104317099,41.7197912275844,46.6839051324400,51.6811523610568,56.6616020709971,61.5754912550769,66.3737219568846,71.0083518413320,75.4330732186187,79.6036757353612,83.4784881098301,87.0187944976224,90.1892213275811,92.9580907428248,95.2977371154231,97.1847834722052,98.6003750697488,99.5303677847435,99.9654694373959,99.9013326358181,99.3385982137307,98.2828888274639,96.7447527762342,94.7395586070252,92.2873415571467,89.4126033687659,86.1440674755988,82.5143920078558,78.5598434829994,74.3199344426900,69.8370286565307,65.1559178372851,60.3233740968898,55.3876826149722,50.3981591892969,45.4046574886159,40.4570709312906,35.6048341667467,30.8964291407995,26.3789006800767,22.0973864356610,18.0946658826026,14.4107328815439,11.0823960732851,8.14291109901267,5.62164832092477,3.54379936328158,1.93012540602216,0.796749745917829,0.154996697920197,0.0112784463494435,0.367030976468342,1.21869972659212,2.55777510409380,4.37087751044077,6.63989102572094,9.34214441692557,12.4506376614162,15.9343117222250,19.7583588796858,23.8845705186634,28.2717188964052,32.8759690765194,37.6513169131690,42.5500487092901,47.5232179560816,52.5211343903406,57.4938604831476,62.3917103991480,67.1657464409948,71.7682680186447,76.1532882578848,80.2769934859801,84.0981810034068,87.5786707676074,90.6836868753553,93.3822050320834,95.6472625363814,97.4562276823947,98.7910258883488,99.6383202917954,99.9896450071335,99.8414897139400,99.1953347309308,98.0576362251058,96.4397617038620,94.3578764346176,91.8327819268028,88.8897080900546,85.5580611452991,81.8711298075120,77.8657526758831,73.5819501547098,69.0625245827470,64.3526325663864,59.4993337897719,54.5511208099924,49.5574345354798,44.5681702287960,39.6331789696621,34.8017695594477,30.1222158439284,25.6412743769745,21.4037172445218,17.4518847166877,13.8252621977878,10.5600857012292,7.68897979124147,5.24063160901591,3.23950424027306,1.70559228819648,0.654222093967562,0.0958986010301857};
int sw_batch = 2;

int cont=0;
int cont2=0;
int largo_batch = 300;

void setup() {

  // ESC

  ESC.attach(9,1000,2000);                            // Attach the ESC on pin 9, (pin, min pulse width, max pulse width in microseconds) 
  Serial.begin(9600);
  ESC.write(0);                                       // Send the signal to the ESC
  delay(5000);
  // SENSOR 
  pinMode(Trigger, OUTPUT);                           // Pin as output
  pinMode(Echo, INPUT);                               // Pin as input
  pinMode(sw_am_pin, INPUT);                          // Pin as input
  digitalWrite(Trigger, LOW);                         // Trigger initialization at zero
  digitalWrite(sw_am_pin, LOW);                       // Se_am_pin initialization at zero

  // PID
  Setpoint = 0;
  myPID.SetMode(AUTOMATIC);                           // Turn the PID on
  myPID.SetTunings(Kp, Ki, Kd);                       // Adjust PID values


}

void loop() {
 
  // SENSOR 
  digitalWrite(Trigger, LOW);
  delayMicroseconds(2);
  digitalWrite(Trigger, HIGH);
  delayMicroseconds(10);                               // 10ms pulse

  float t = pulseIn(Echo, HIGH);                       // Pulse width
  float d = (t/2)/29.1;                                // Distance in cm

  // PID

  Input = map(d,5,44,0,100);                           // Maps sensor value to input for PID
  alpha = 0.05 ;                                       // Lowpass filter
  df = (alpha*d)+((1-alpha)*df);                       // Lowpass filter
  Inputf = map(df,5,44,0,100);                         // Maps filtered sensor value to input for PID
  
  sw_am = digitalRead(sw_am_pin);                      // Sw auto/manual

  if (sw_am == HIGH)                                   // Auto
  {
   potValue = analogRead(A0);                          // Reads the value of the potentiometer (value between 0 and 1023)
   alpha = 0.05;                                       // Lowpass filter
   potValuef = (alpha*potValue)+((1-alpha)*potValuef); // Lowpass filter
   if (cont >= largo_batch)
   {
      Setpoint = 0;   
      ESC.write(0);                                       // Send the signal to the ESC    

   }
   else
   {
       if (sw_batch == 1)
        {
          Setpoint = batch[cont];            // Maps pot value to Setpoint
        }
       else
       {
          Setpoint = sinebatch[cont];            // Maps pot value to Setpoint  
       }
      
      cont2 = cont2+1;
      if (cont2 == 15)
      {
        cont2 = 0;
        cont = cont+1;
        }
      myPID.Compute();                                    // Computes control effort
      u = map(Output,0,100,umin,umax);                    // Maps control effort to ESC control values
      if (u>=umax)                                        // Max limit
      {
       u = umax;
       }
      ESC.write(u);                                       // Send the signal to the ESC    
   }
  
  }
  else  // manual
  {
   potValue = analogRead(A0);                          // Reads the value of the potentiometer (value between 0 and 1023)
   alpha = 0.05;                                       // Lowpass filter
   potValuef = (alpha*potValue)+((1-alpha)*potValuef); // Lowpass filter
   u = map(potValuef,30,1000,umin,umax);               // Maps pot to ESC control values. 
   if (u >= umax)                                      // Max limit
   {
      u = umax;
   } 
   ESC.write(u);                                        // Send the signal to the ESC
   }
  
  // Plots
  Serial.print(" ");
  Serial.print(Setpoint);
  Serial.print(" ");
  Serial.print(Input); 
  Serial.print(" ");
  Serial.print(Output); 

 // Plotter limits
  Serial.print(" ");
  Serial.print(0);                                      // To freeze the lower limit
  Serial.print(" ");
  Serial.print(100);                                    // To freeze the upper limit
  Serial.println(" ");
  
  delay(0.1);
  
}
